# cookie cutter git lab development pipeline
# TODO - create an image that is the openjdk image + the SDK and NDK setup to 
#        make initialization faster   shb 10/19/2019

image: openjdk:8-jdk

variables:
  ANDROID_COMPILE_SDK: "21"
  ANDROID_BUILD_TOOLS: "29.0.2"
  ANDROID_SDK_TOOLS:   "4333796"
  NDK_VERSION: "12b"
  WGET: "wget --quiet --tries=0"
  GIT_STRATEGY: clone
  GIT_TOKEN: "3ydao3HGquPdh2ybxKQk"


cache:
  key: android_sdk21_buildtools_29.0.2_ndk_12b
  paths:
    - android-sdk-linux
    - android-ndk-r12b

before_script:
  - if [ ! -d android-sdk-linux ]; then
       $WGET --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip;
       unzip -qq -d android-sdk-linux android-sdk.zip;
    else
       echo "using cached version of the the android sdk";
    fi
  - mkdir -p ~/.android;
  - touch ~/.android/repositories.cfg;
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null;
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null;
  - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null;

  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/

  # install the NDK build so we can actually strip the libraries

  - if [ ! -d android-ndk-r12b ]; then
       $WGET --output-document=android-ndk.zip https://dl.google.com/android/repository/android-ndk-r${NDK_VERSION}-linux-x86_64.zip;
       unzip -qq  android-ndk.zip;
    else
       echo "using cached version of the the android ndk";
    fi


  # temporarily disable checking for EPIPE error and use yes to accept all licenses
  - set +o pipefail
  - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
  - set -o pipefail
  - export ANDROID_NDK_HOME=$PWD/android-ndk-r${NDK_VERSION}
  - chmod +x ./gradlew
  - git branch

stages:
  - build
  - test

assembleMilRelease:
  stage: build
  script:
    - git clone --depth 1 -n https://milsdk_builder:3ydao3HGquPdh2ybxKQk@git.pargovernment.com/sdks/atak-mil.git
    - pushd .
    - cd atak-mil
    - git lfs pull -I "main.jar"
    - popd
    - mkdir sdk
    - cp atak-mil/main.jar sdk
    - ./gradlew -Pci --console=plain lintMilRelease assembleMilRelease
    - rm -fr ATAK/app/build/outputs/apk/mil/debug
    - du ATAK/app/build/outputs/
    - find ATAK/app/build/outputs
  artifacts:
    expire_in: 720h
    paths:
    - ATAK/app/build/outputs/

assembleCivRelease:
  stage: build
  script:
    - ./gradlew -Pci --console=plain lintCivRelease assembleCivRelease
    - rm -fr ATAK/app/build/outputs/apk/civ/debug
    - du ATAK/app/build/outputs/
    - find ATAK/app/build/outputs
  artifacts:
    expire_in: 720h
    paths:
    - ATAK/app/build/outputs/
  when: manual


assembleFveyRelease:
  stage: build
  script:
    - ./gradlew -Pci --console=plain lintFveyRelease assembleFveyRelease
    - rm -fr ATAK/app/build/outputs/apk/fvey/debug
    - du ATAK/app/build/outputs/
    - find ATAK/app/build/outputs
  artifacts:
    expire_in: 720h
    paths:
    - ATAK/app/build/outputs/
  when: manual


testRelease:
  stage: test
  script:
    - ./gradlew -Pci --console=plain ATAK:app:testMilRelease
